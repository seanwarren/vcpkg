# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pr:
- master

jobs:
- job: windows
  timeoutInMinutes: 360
  pool: 
    vmImage: 'vs2017-win2016'
  variables:
    VCPKG_ROOT: '$(Build.SourcesDirectory)/vcpkg'
  
  steps:
  - template: 'azure-pipeline-steps.yaml'
    parameters:
      buildPlatform: 'linux'

  - task: TriggerPipeline@1
    inputs:
      serviceConnection: 'azure-devops'
      project: '6439e790-bc20-4600-8a79-6e11fc8b08c2'
      Pipeline: 'Build'
      buildDefinition: 'Galene'

- job: osx
  timeoutInMinutes: 360
  pool:
    vmImage: 'macos-10.14'
  variables:
    VCPKG_ROOT: '$(Build.SourcesDirectory)/vcpkg'
    DEVELOPER_DIR: '/Applications/Xcode_10.1.app'

  steps: 
  - script: 'brew install gcc6 p7zip'
    displayName: 'Install components'

  - template: 'azure-pipeline-steps.yaml'
    parameters:
      buildPlatform: 'osx'

- job: linux
  timeoutInMinutes: 360
  pool:
    vmImage: 'ubuntu-16.04'
  container: ubuntu:18.04
  variables:
    VCPKG_ROOT: '$(Build.SourcesDirectory)/vcpkg'
    CXX: '/usr/bin/clang++'
    CC: '/usr/bin/clang'

  steps: 
  - script: 'sudo apt-get install libxkbcommon-dev'
    displayName: 'Install components'
  - template: 'azure-pipeline-steps.yaml'
    parameters:
      buildPlatform: 'linux'